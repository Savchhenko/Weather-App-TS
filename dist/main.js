(()=>{"use strict";var e={392:function(e,t,n){var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,a){function c(e){try{s(o.next(e))}catch(e){a(e)}}function i(e){try{s(o.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,i)}s((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchRequest=void 0;const r=n(692);t.fetchRequest=function(e){return o(this,void 0,void 0,(function*(){let t=yield fetch(e);if(t.ok){let e=yield t.json();(0,r.showForecast)(e)}else alert("Wrong city"),console.log("Ошибка HTTP: "+t.status)}))}},326:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.dateFormat=t.calcCoord=void 0,t.calcCoord=function(e){let t="";return e>0&&e>9||e<0&&e>-10?t=e.toString().slice(0,5):e>0&&e<10?t=e.toString().slice(0,4):e<0&&e<=-10&&(t=e.toString().slice(0,6)),1===t.split(".")[1].length?t+="0":0===t.split(".")[1].length&&(t+="00"),t},t.dateFormat=function(e){const t=new Date(1e3*e);return t.getHours()+":"+("0"+t.getMinutes()).substring(-2)}},69:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.currentCityName=t.apiKey=void 0;const o=n(326),r=n(178),a=n(392),c=n(585);t.apiKey="87a4e3b57fd5877a435275e9fae66ccd";const i=document.querySelector(".btn-show"),s=document.querySelector(".container__main--city"),u=document.querySelector(".container__main--date");t.currentCityName="";const l=new Date;u.innerHTML=l.toLocaleDateString(),i.addEventListener("click",(()=>{t.currentCityName=s.value,t.currentCityName?fetch(`http://api.openweathermap.org/data/2.5/weather?q=${s.value}&appid=${t.apiKey}`).then((e=>e.json())).then((e=>{"404"===e.cod?alert("City not found"):((0,r.showWeather)(e),document.querySelector(".btn-update").addEventListener("click",(()=>{(0,c.xhrRequest)()})),function(e,n){e.addEventListener("click",(()=>{const e=(0,o.calcCoord)(n.coord.lon),r=`https://api.openweathermap.org/data/2.5/onecall?lat=${(0,o.calcCoord)(n.coord.lat)}&lon=${e}&exclude=current,minutely,daily&appid=${t.apiKey}`;(0,a.fetchRequest)(r)}))}(document.querySelector(".btn-hourly"),e)),s.value=""})).catch((e=>console.log("Error: "+e))):alert("Enter name of the city and then press the button again")}))},692:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.showForecast=void 0;const o=n(326),r=document.querySelector(".container__main"),a=document.querySelector(".container__forecast");t.showForecast=function(e){a.style.display="flex",r.style.display="none",document.querySelector(".btn-hourly").style.display="none";for(let t=1;t<24;t++){const n=(0,o.dateFormat)(e.hourly[t].dt),r=Math.round(e.hourly[t].temp-273.15),c=`http://openweathermap.org/img/wn/${e.hourly[t].weather[0].icon}@2x.png`,i=document.createElement("div"),s=`\n            <div class="container__forecast__item">\n                <span>${n}</span>\n                <span>${r}°C</span>\n                <img src="${c}">\n            </div>\n        `;a.appendChild(i),i.innerHTML=s}}},178:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.showWeather=void 0;const n=document.querySelector(".container__weather");t.showWeather=function(e){const t=(new Date).toLocaleTimeString().slice(0,-3),o=Math.round(e.main.temp-273.15),r=`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`;n.style.display="flex",n.innerHTML=`\n        <h1 class="container__weather--city-name">${e.name}</h1>\n        <span>Status at ${t}</span>\n        <h2 class="container__weather--temp">${o}°C</h2>\n        <h2>${e.weather[0].description}</h2>\n        <img src=${r}>\n        <div>\n            <button class="btn-update btn">Update</button>\n            <button class="btn-hourly btn">Hourly forecast</button>\n        <div>\n    `}},585:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.xhrRequest=void 0;const o=n(178),r=n(69),a=n(69);t.xhrRequest=function(){let e=new XMLHttpRequest;e.open("GET",`http://api.openweathermap.org/data/2.5/weather?q=${a.currentCityName}&appid=${r.apiKey}`),e.responseType="json",e.send(),e.onload=function(){200!=e.status?alert("Something was going wrong"):(0,o.showWeather)(e.response)}}}},t={};!function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o].call(a.exports,a,a.exports,n),a.exports}(69)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,